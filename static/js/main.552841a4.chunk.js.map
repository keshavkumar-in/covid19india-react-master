{"version":3,"sources":["utils/common-functions.js","components/row.js","components/table.js","components/level.js","constants.js","components/choropleth.js","components/mapexplorer.js","components/minigraph.js","components/global.js","components/home.js","components/navbar.js","components/links.js","components/sc.js","components/banner.js","App.js","serviceWorker.js","index.js"],"names":["months","formatDate","unformattedDate","day","slice","month","year","time","formatDateAbsolute","Row","props","useState","state","setState","districts","setDistricts","sortedDistricts","setSortedDistricts","sortColumn","localStorage","getItem","isAscending","sortData","setSortData","useEffect","handleReveal","sortDistricts","useCallback","aDistricts","sorted","Object","keys","sort","district1","district2","value1","parseInt","confirmed","value2","comparisonValue","forEach","key","handleSort","column","setItem","Fragment","className","reveal","style","display","total","onClick","onMouseEnter","onHighlightState","index","onMouseLeave","touchstart","background","fontWeight","color","deltaconfirmed","active","recovered","deltarecovered","deaths","deltadeaths","colSpan","title","isNaN","Date","parse","lastupdatedtime","formatDistance","e","window","innerWidth","filter","district","toLowerCase","map","onHighlightDistrict","delta","Unknown","Table","states","setStates","revealedStates","setRevealedStates","count","setCount","summary","reduce","a","length","s","stateDistrictWiseData","currentsortColumn","currentTarget","querySelector","getAttribute","totalRow","splice","StateData1","StateData2","unshift","doSort","animationDelay","to","districtData","Level","data","setData","setConfirmed","setActive","recoveries","setRecoveries","setDeaths","parseData","deltas","confirmeddelta","recovereddelta","deceaseddelta","MAP_TYPES","propertyFieldMap","country","ChoroplethMap","statistic","mapData","setHoveredRegion","mapMeta","changeMap","selectedRegion","choroplethMap","useRef","svgRenderCount","setSvgRenderCount","ready","geoData","d3","remove","propertyField","mapType","svg","current","width","attr","height","topology","topojson","objects","graphObjectName","projection","fitSize","fitExtent","path","onceTouchedRegion","append","selectAll","features","enter","d","n","properties","maxConfirmed","on","name","err","console","log","handleMouseover","target","parentNode","appendChild","text","value","parseFloat","toFixed","toTitleCase","str","split","i","charAt","toUpperCase","join","renderData","cells","label","domain","genLength","generatedLabels","labelDelimiter","Math","floor","n1","n2","Array","from","legendLinear","legendColor","shapeWidth","shapeHeight","titleWidth","labels","orient","scale","select","call","geoDataFile","prevCount","classed","nodes","highlightRegionInMap","id","viewBox","preserveAspectRatio","ref","India","Assam","Bihar","Chhattisgarh","Delhi","Karnataka","Kerala","Goa","Gujarat","Haryana","Jharkhand","Ladakh","Maharashtra","Manipur","Meghalaya","Mizoram","Nagaland","Odisha","Punjab","Rajasthan","Sikkim","Telangana","Tripura","Uttarakhand","regionHighlighted","setSelectedRegion","currentHoveredRegion","setCurrentHoveredRegion","currentMap","setCurrentMap","region","getRegionFromState","useMemo","currentMapData","acc","districtWiseData","getRegionFromDistrict","undefined","newMap","switchMapToState","topDistrict","b","marginTop","padding","borderRadius","marginRight","Minigraph","timeseries","setTimeseries","graphElement1","graphElement2","graphElement3","graphElement4","graphData","svg1","svg2","svg3","svg4","x","range","y1","path1","datum","y","curve","totalLength1","node","getTotalLength","transition","duration","animate","path2","totalLength2","path3","totalLength3","path4","totalLength4","GlobalData","global","axios","get","then","res","this","affectedCountries","cases","React","Component","Home","setStateDistrictWiseData","fetched","setFetched","lastUpdated","setLastUpdated","setDeltas","setRegionHighlighted","getStates","Promise","all","response","stateDistrictWiseResponse","statewise","cases_time_series","key_values","marginLeft","src","border","Navbar","location","pathname","alt","pages","page","pageLink","animationDelayForNavbar","displayName","Links","frameBorder","allowFullScreen","hidden","href","SC","images","zoomInProperties","transitionDuration","infinite","indicators","arrows","Banner","each","history","require","createBrowserHistory","App","view","render","exact","component","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.552841a4.chunk.js","sourcesContent":["const months = {\n  '01': 'Jan',\n  '02': 'Feb',\n  '03': 'Mar',\n  '04': 'Apr',\n  '05': 'May',\n  '06': 'Jun',\n  '07': 'Jul',\n  '08': 'Aug',\n  '09': 'Sep',\n  '10': 'Oct',\n  '11': 'Nov',\n  '12': 'Dec',\n};\n\nexport const formatDate = (unformattedDate) => {\n  const day = unformattedDate.slice(0, 2);\n  const month = unformattedDate.slice(3, 5);\n  const year = unformattedDate.slice(6, 10);\n  const time = unformattedDate.slice(11);\n  return `${year}-${month}-${day}T${time}+05:30`;\n};\n\nexport const formatDateAbsolute = (unformattedDate) => {\n  const day = unformattedDate.slice(0, 2);\n  const month = unformattedDate.slice(3, 5);\n  const time = unformattedDate.slice(11);\n  return `${day} ${months[month]}, ${time.slice(0, 5)} IST`;\n};\n","import React, {useState, useEffect, useCallback} from 'react';\nimport * as Icon from 'react-feather';\nimport {formatDate, formatDateAbsolute} from '../utils/common-functions';\nimport {formatDistance} from 'date-fns';\nfunction Row(props) {\n  const [state, setState] = useState(props.state);\n  const [districts, setDistricts] = useState(props.districts);\n  const [sortedDistricts, setSortedDistricts] = useState(props.districts);\n  const [sortData, setSortData] = useState({\n    sortColumn: localStorage.getItem('district.sortColumn')\n      ? localStorage.getItem('district.sortColumn')\n      : 'confirmed',\n    isAscending: localStorage.getItem('district.isAscending')\n      ? localStorage.getItem('district.isAscending') === 'true'\n      : false,\n  });\n\n  useEffect(() => {\n    setState(props.state);\n  }, [props.state]);\n\n  useEffect(() => {\n    setDistricts(props.districts);\n    setSortedDistricts(props.districts);\n  }, [props.districts]);\n\n  const handleReveal = () => {\n    props.handleReveal(props.state.state);\n  };\n\n  const sortDistricts = useCallback(\n    (aDistricts) => {\n      const sorted = {};\n      if (aDistricts) {\n        Object.keys(aDistricts)\n          .sort((district1, district2) => {\n            const sortColumn = sortData.sortColumn;\n            const value1 =\n              sortColumn === 'district'\n                ? district1\n                : parseInt(aDistricts[district1].confirmed);\n            const value2 =\n              sortColumn === 'district'\n                ? district2\n                : parseInt(aDistricts[district2].confirmed);\n            const comparisonValue =\n              value1 > value2\n                ? 1\n                : value1 === value2 && district1 > district2\n                ? 1\n                : -1;\n            return sortData.isAscending\n              ? comparisonValue\n              : comparisonValue * -1;\n          })\n          .forEach((key) => {\n            sorted[key] = aDistricts[key];\n          });\n        setSortedDistricts(sorted);\n      }\n    },\n    [sortData.isAscending, sortData.sortColumn]\n  );\n\n  const handleSort = (column) => {\n    const isAscending =\n      sortData.sortColumn === column\n        ? !sortData.isAscending\n        : sortData.sortColumn === 'district';\n    setSortData({\n      sortColumn: column,\n      isAscending: isAscending,\n    });\n    localStorage.setItem('district.sortColumn', column);\n    localStorage.setItem('district.isAscending', isAscending);\n  };\n\n  useEffect(() => {\n    sortDistricts(districts);\n  }, [districts, sortData, sortDistricts]);\n\n  return (\n    <React.Fragment>\n      <span\n        className={`dropdown ${\n          props.reveal ? 'rotateRightDown' : 'rotateDownRight'\n        }`}\n        style={{display: !props.total ? '' : 'none'}}\n        onClick={() => {\n          handleReveal();\n        }}\n      >\n        <Icon.ChevronDown />\n      </span>\n      <tr\n        className={props.total ? 'state is-total' : 'state'}\n        onMouseEnter={() => props.onHighlightState?.(state, props.index)}\n        onMouseLeave={() => props.onHighlightState?.()}\n        touchstart={() => props.onHighlightState?.(state, props.index)}\n        onClick={!props.total ? handleReveal : null}\n        style={{background: props.index % 2 === 0 ? '#f8f9fa' : ''}}\n      >\n        <td style={{fontWeight: 600}}>{state.state}</td>\n        <td>\n          <span className=\"deltas\" style={{color: '#ff073a'}}>\n            {state.deltaconfirmed > 0 && <Icon.ArrowUp />}\n            {state.deltaconfirmed > 0 ? `${state.deltaconfirmed}` : ''}\n          </span>\n          {parseInt(state.confirmed) === 0 ? '-' : state.confirmed}\n        </td>\n        <td\n          style={{color: parseInt(state.active) === 0 ? '#B5B5B5' : 'inherit'}}\n        >\n          {/* <span className=\"deltas\" style={{color: '#007bff'}}>\n            {!state.delta.active==0 && <Icon.ArrowUp/>}\n            {state.delta.active>0 ? `${state.delta.active}` : ''}\n          </span>*/}\n          {parseInt(state.active) === 0 ? '-' : state.active}\n        </td>\n        <td\n          style={{\n            color: parseInt(state.recovered) === 0 ? '#B5B5B5' : 'inherit',\n          }}\n        >\n          <span className=\"deltas\" style={{color: '#28a745'}}>\n            {state.deltarecovered > 0 && <Icon.ArrowUp />}\n            {state.deltarecovered > 0 ? `${state.deltarecovered}` : ''}\n          </span>\n          {parseInt(state.recovered) === 0 ? '-' : state.recovered}\n        </td>\n        <td\n          style={{color: parseInt(state.deaths) === 0 ? '#B5B5B5' : 'inherit'}}\n        >\n          <span className=\"deltas\" style={{color: '#6c757d'}}>\n            {state.deltadeaths > 0 && <Icon.ArrowUp />}\n            {state.deltadeaths > 0 ? `${state.deltadeaths}` : ''}\n          </span>\n          {parseInt(state.deaths) === 0 ? '-' : state.deaths}\n        </td>\n      </tr>\n\n      <tr\n        className={'state-last-update'}\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\n      >\n        <td colSpan={2}>\n          <div className=\"last-update\">\n            <h6>Last Updated&nbsp;</h6>\n            <h6\n              title={\n                isNaN(Date.parse(formatDate(props.state.lastupdatedtime)))\n                  ? ''\n                  : formatDateAbsolute(props.state.lastupdatedtime)\n              }\n            >\n              {isNaN(Date.parse(formatDate(props.state.lastupdatedtime)))\n                ? ''\n                : `${formatDistance(\n                    new Date(formatDate(props.state.lastupdatedtime)),\n                    new Date()\n                  )} Ago`}\n            </h6>\n          </div>\n        </td>\n      </tr>\n\n      <tr\n        className={`district-heading`}\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\n      >\n        <td onClick={(e) => handleSort('district')}>\n          <div className=\"heading-content\">\n            <abbr title=\"District\">District</abbr>\n            <div\n              style={{\n                display:\n                  sortData.sortColumn === 'district' ? 'initial' : 'none',\n              }}\n            >\n              {sortData.isAscending ? (\n                <div className=\"arrow-up\" />\n              ) : (\n                <div className=\"arrow-down\" />\n              )}\n            </div>\n          </div>\n        </td>\n        <td onClick={(e) => handleSort('confirmed')}>\n          <div className=\"heading-content\">\n            <abbr\n              className={`${window.innerWidth <= 769 ? 'is-cherry' : ''}`}\n              title=\"Confirmed\"\n            >\n              {window.innerWidth <= 769\n                ? window.innerWidth <= 375\n                  ? 'C'\n                  : 'Cnfmd'\n                : 'Confirmed'}\n            </abbr>\n            <div\n              style={{\n                display:\n                  sortData.sortColumn === 'confirmed' ? 'initial' : 'none',\n              }}\n            >\n              {sortData.isAscending ? (\n                <div className=\"arrow-up\" />\n              ) : (\n                <div className=\"arrow-down\" />\n              )}\n            </div>\n          </div>\n        </td>\n      </tr>\n\n      {sortedDistricts &&\n        Object.keys(sortedDistricts)\n          .filter((district) => district.toLowerCase() !== 'unknown')\n          .map((district, index) => {\n            if (district.toLowerCase() !== 'unknown') {\n              return (\n                <tr\n                  key={index}\n                  className={`district`}\n                  style={{\n                    display: props.reveal && !props.total ? '' : 'none',\n                    background: index % 2 === 0 ? '#f8f9fa' : '',\n                  }}\n                  onMouseEnter={() =>\n                    props.onHighlightDistrict?.(district, state, props.index)\n                  }\n                  onMouseLeave={() => props.onHighlightDistrict?.()}\n                  touchstart={() =>\n                    props.onHighlightDistrict?.(district, state, props.index)\n                  }\n                >\n                  <td style={{fontWeight: 600}}>{district}</td>\n                  <td>\n                    <span className=\"deltas\" style={{color: '#ff073a'}}>\n                      {sortedDistricts[district].delta.confirmed > 0 && (\n                        <Icon.ArrowUp />\n                      )}\n                      {sortedDistricts[district].delta.confirmed > 0\n                        ? `${sortedDistricts[district].delta.confirmed}`\n                        : ''}\n                    </span>\n                    {sortedDistricts[district].confirmed}\n                  </td>\n                </tr>\n              );\n            }\n            return null;\n          })}\n\n      {sortedDistricts?.Unknown && (\n        <tr\n          className={`district`}\n          style={{display: props.reveal && !props.total ? '' : 'none'}}\n        >\n          <td style={{fontWeight: 600}}>Unknown</td>\n          <td>\n            <span className=\"deltas\" style={{color: '#ff073a'}}>\n              {sortedDistricts['Unknown'].delta.confirmed > 0 && (\n                <Icon.ArrowUp />\n              )}\n              {sortedDistricts['Unknown'].delta.confirmed > 0\n                ? `${sortedDistricts['Unknown'].delta.confirmed}`\n                : ''}\n            </span>\n            {sortedDistricts['Unknown'].confirmed}\n          </td>\n        </tr>\n      )}\n\n      <tr\n        className={`spacer`}\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\n      >\n        <td></td>\n        <td></td>\n        <td></td>\n      </tr>\n    </React.Fragment>\n  );\n}\n\nexport default Row;\n","import React, {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport Row from './row';\n\nfunction Table(props) {\n  const [states, setStates] = useState(props.states);\n  const [revealedStates, setRevealedStates] = useState({});\n  const [districts, setDistricts] = useState({});\n  const [count, setCount] = useState(0);\n  const [sortData, setSortData] = useState({\n    sortColumn: localStorage.getItem('state.sortColumn')\n      ? localStorage.getItem('state.sortColumn')\n      : 'confirmed',\n    isAscending: localStorage.getItem('state.isAscending')\n      ? localStorage.getItem('state.isAscending') === 'true'\n      : false,\n  });\n\n  useEffect(() => {\n    if (props.summary === true) {\n      setStates(props.states.slice(0, 9));\n    } else {\n      setStates(props.states);\n    }\n  }, [props.states, props.summary]);\n\n  useEffect(() => {\n    if (props.states[0]) {\n      setRevealedStates(\n        props.states.reduce((a, state) => {\n          return {...a, [state.state]: false};\n        }, {})\n      );\n    }\n  }, [props.states]);\n\n  useEffect(() => {\n    if (states.length > 0) {\n      // slice to ignore the first item which is the total count\n      setCount(states.slice(1).filter((s) => s && s.confirmed > 0).length);\n    }\n  }, [states]);\n\n  useEffect(() => {\n    setDistricts(props.stateDistrictWiseData);\n  }, [props.stateDistrictWiseData]);\n\n  const doSort = (e, props) => {\n    const totalRow = states.splice(0, 1);\n    states.sort((StateData1, StateData2) => {\n      const sortColumn = sortData.sortColumn;\n      let value1 = StateData1[sortColumn];\n      let value2 = StateData2[sortColumn];\n\n      if (sortColumn !== 'state') {\n        value1 = parseInt(StateData1[sortColumn]);\n        value2 = parseInt(StateData2[sortColumn]);\n      }\n\n      if (sortData.isAscending) {\n        return value1 > value2\n          ? 1\n          : value1 === value2 && StateData1['state'] > StateData2['state']\n          ? 1\n          : -1;\n      } else {\n        return value1 < value2\n          ? 1\n          : value1 === value2 && StateData1['state'] > StateData2['state']\n          ? 1\n          : -1;\n      }\n    });\n    states.unshift(totalRow[0]);\n  };\n\n  const handleSort = (e, props) => {\n    const currentsortColumn = e.currentTarget\n      .querySelector('abbr')\n      .getAttribute('title')\n      .toLowerCase();\n    const isAscending =\n      sortData.sortColumn === currentsortColumn\n        ? !sortData.isAscending\n        : sortData.sortColumn === 'state';\n    setSortData({\n      sortColumn: currentsortColumn,\n      isAscending: isAscending,\n    });\n    localStorage.setItem('state.sortColumn', currentsortColumn);\n    localStorage.setItem('state.isAscending', isAscending);\n  };\n\n  const handleReveal = (state) => {\n    setRevealedStates({\n      ...revealedStates,\n      [state]: !revealedStates[state],\n    });\n  };\n\n  doSort();\n\n  return (\n    <React.Fragment>\n      <h5 className=\"table-fineprint fadeInUp\" style={{animationDelay: '1s'}}>\n        Compiled from State Govt. numbers <Link to=\"/links\">Know More</Link>\n      </h5>\n      <table className=\"table fadeInUp\" style={{animationDelay: '1s'}}>\n        <thead>\n          <tr>\n            <th\n              className=\"sticky state-heading\"\n              onClick={(e) => handleSort(e, props)}\n            >\n              <div className=\"heading-content\">\n                <abbr title=\"State\">State/UT</abbr>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'state' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </th>\n            <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n              <div className=\"heading-content\">\n                <abbr\n                  className={`${window.innerWidth <= 769 ? 'is-cherry' : ''}`}\n                  title=\"Confirmed\"\n                >\n                  {window.innerWidth <= 769\n                    ? window.innerWidth <= 375\n                      ? 'C'\n                      : 'Cnfmd'\n                    : 'Confirmed'}\n                </abbr>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'confirmed' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </th>\n            <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n              <div className=\"heading-content\">\n                <abbr\n                  className={`${window.innerWidth <= 769 ? 'is-blue' : ''}`}\n                  title=\"Active\"\n                >\n                  {window.innerWidth <= 769\n                    ? window.innerWidth <= 375\n                      ? 'A'\n                      : 'Actv'\n                    : 'Active'}\n                </abbr>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'active' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </th>\n            <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n              <div className=\"heading-content\">\n                <abbr\n                  className={`${window.innerWidth <= 769 ? 'is-green' : ''}`}\n                  title=\"Recovered\"\n                >\n                  {window.innerWidth <= 769\n                    ? window.innerWidth <= 375\n                      ? 'R'\n                      : 'Rcvrd'\n                    : 'Recovered'}\n                </abbr>\n                <div\n                  className={\n                    sortData.sortColumn === 'recovered' ? 'sort-black' : ''\n                  }\n                ></div>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'recovered' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </th>\n            <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n              <div className=\"heading-content\">\n                <abbr\n                  className={`${window.innerWidth <= 769 ? 'is-gray' : ''}`}\n                  title=\"Deaths\"\n                >\n                  {window.innerWidth <= 769\n                    ? window.innerWidth <= 375\n                      ? 'D'\n                      : 'Dcsd'\n                    : 'Deceased'}\n                </abbr>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'deaths' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {states.map((state, index) => {\n            if (index !== 0 && state.confirmed > 0) {\n              return (\n                <Row\n                  key={index}\n                  index={index}\n                  state={state}\n                  total={false}\n                  reveal={revealedStates[state.state]}\n                  districts={\n                    Object.keys(districts).length - 1 > 0\n                      ? districts[state.state].districtData\n                      : []\n                  }\n                  onHighlightState={props.onHighlightState}\n                  onHighlightDistrict={props.onHighlightDistrict}\n                  handleReveal={handleReveal}\n                />\n              );\n            }\n            return null;\n          })}\n        </tbody>\n\n        <tbody>\n          {states.length > 1 && props.summary === false && (\n            <Row key={0} state={states[0]} total={true} />\n          )}\n        </tbody>\n      </table>\n      <h5 className=\"table-fineprint fadeInUp\" style={{animationDelay: '1s'}}>\n        {count} States/UTS Affected\n      </h5>\n    </React.Fragment>\n  );\n}\n\nexport default Table;\n","import React, {useState, useEffect} from 'react';\n\nfunction Level(props) {\n  const [data, setData] = useState(props.data);\n  const [confirmed, setConfirmed] = useState(0);\n  const [active, setActive] = useState(0);\n  const [recoveries, setRecoveries] = useState(0);\n  const [deaths, setDeaths] = useState(0);\n\n  useEffect(() => {\n    setData(props.data);\n  }, [props.data]);\n\n  useEffect(() => {\n    const parseData = () => {\n      let confirmed = 0;\n      let active = 0;\n      let recoveries = 0;\n      let deaths = 0;\n      data.forEach((state, index) => {\n        if (index !== 0) {\n          confirmed += parseInt(state.confirmed);\n          active += parseInt(state.active);\n          recoveries += parseInt(state.recovered);\n          deaths += parseInt(state.deaths);\n        }\n      });\n      setConfirmed(confirmed);\n      setActive(active);\n      setRecoveries(recoveries);\n      setDeaths(deaths);\n    };\n    parseData();\n  }, [data]);\n\n  return (\n    <div className=\"Level fadeInUp\" style={{animationDelay: '0.8s'}}>\n      <div className=\"level-item is-cherry\">\n        <h5>Confirmed</h5>\n        <h4>\n          [\n          {props.deltas\n            ? props.deltas.confirmeddelta >= 0\n              ? '+' + props.deltas.confirmeddelta\n              : '+0'\n            : ''}\n          ]\n        </h4>\n        <h1>{confirmed} </h1>\n      </div>\n\n      <div className=\"level-item is-blue\">\n        <h5 className=\"heading\">Active</h5>\n        <h4>&nbsp;</h4>\n        {/* <h4>[{props.deltas ? props.deltas.confirmeddelta-(props.deltas.recovereddelta+props.deltas.deceaseddelta) >=0 ? '+'+(props.deltas.confirmeddelta-(props.deltas.recovereddelta+props.deltas.deceaseddelta)).toString() : '+0' : ''}]</h4>*/}\n        <h1 className=\"title has-text-info\">{active}</h1>\n      </div>\n\n      <div className=\"level-item is-green\">\n        <h5 className=\"heading\">Recovered</h5>\n        <h4>\n          [\n          {props.deltas\n            ? props.deltas.recovereddelta >= 0\n              ? '+' + props.deltas.recovereddelta\n              : '+0'\n            : ''}\n          ]\n        </h4>\n        <h1 className=\"title has-text-success\">{recoveries} </h1>\n      </div>\n\n      <div className=\"level-item is-gray\">\n        <h5 className=\"heading\">Deceased</h5>\n        <h4>\n          [\n          {props.deltas\n            ? props.deltas.deceaseddelta >= 0\n              ? '+' + props.deltas.deceaseddelta\n              : '+0'\n            : ''}\n          ]\n        </h4>\n        <h1 className=\"title has-text-grey\">{deaths}</h1>\n      </div>\n    </div>\n  );\n}\n\nexport default Level;\n","export const MAP_TYPES = {\n  COUNTRY: 'country',\n  STATE: 'state',\n};\n\nexport const MAPS_DIR = '/maps';\n","import React, {useCallback, useEffect, useRef, useState} from 'react';\nimport * as d3 from 'd3';\nimport {legendColor} from 'd3-svg-legend';\nimport * as topojson from 'topojson';\nimport {MAP_TYPES} from '../constants';\n\nconst propertyFieldMap = {\n  country: 'st_nm',\n  state: 'district',\n};\n\nfunction ChoroplethMap({\n  statistic,\n  mapData,\n  setHoveredRegion,\n  mapMeta,\n  changeMap,\n  selectedRegion,\n}) {\n  const choroplethMap = useRef(null);\n  const [svgRenderCount, setSvgRenderCount] = useState(0);\n\n  const ready = useCallback(\n    (geoData) => {\n      d3.selectAll('svg#chart > *').remove();\n      const propertyField = propertyFieldMap[mapMeta.mapType];\n      const maxInterpolation = 0.8;\n      const svg = d3.select(choroplethMap.current);\n      const width = +svg.attr('width');\n      const height = +svg.attr('height');\n\n      const handleMouseover = (name) => {\n        try {\n          setHoveredRegion(name, mapMeta);\n        } catch (err) {\n          console.log('err', err);\n        }\n      };\n\n      const topology = topojson.feature(\n        geoData,\n        geoData.objects[mapMeta.graphObjectName]\n      );\n\n      const projection = d3.geoMercator();\n\n      if (mapMeta.mapType === MAP_TYPES.COUNTRY)\n        projection.fitSize([width, height], topology);\n      else\n        projection.fitExtent(\n          [\n            [90, 20],\n            [width, height],\n          ],\n          topology\n        );\n\n      const path = d3.geoPath(projection);\n\n      let onceTouchedRegion = null;\n\n      svg\n        .append('g')\n        .attr('class', 'states')\n        .selectAll('path')\n        .data(topology.features)\n        .enter()\n        .append('path')\n        .attr('class', 'path-region')\n        .attr('fill', function (d) {\n          const n = parseInt(mapData[d.properties[propertyField]]) || 0;\n          const color =\n            n === 0\n              ? '#ffffff'\n              : d3.interpolateReds(\n                  (maxInterpolation * n) / (statistic.maxConfirmed || 0.001)\n                );\n          return color;\n        })\n        .attr('d', path)\n        .attr('pointer-events', 'all')\n        .on('mouseover', (d) => {\n          handleMouseover(d.properties[propertyField]);\n          const target = d3.event.target;\n          d3.select(target.parentNode.appendChild(target)).attr(\n            'class',\n            'map-hover'\n          );\n        })\n        .on('mouseleave', (d) => {\n          const target = d3.event.target;\n          d3.select(target).attr('class', 'path-region map-default');\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\n        })\n        .on('touchstart', (d) => {\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\n          else onceTouchedRegion = d;\n        })\n        .on('click', (d) => {\n          if (onceTouchedRegion) {\n            return;\n          }\n          if (mapMeta.mapType === MAP_TYPES.STATE) {\n            return;\n          }\n          changeMap(d.properties[propertyField], mapMeta.mapType);\n        })\n        .style('cursor', 'pointer')\n        .append('title')\n        .text(function (d) {\n          const value = mapData[d.properties[propertyField]] || 0;\n          return (\n            parseFloat(100 * (value / (statistic.total || 0.001))).toFixed(2) +\n            '% from ' +\n            toTitleCase(d.properties[propertyField])\n          );\n        });\n\n      svg\n        .append('path')\n        .attr('stroke', '#ff073a20')\n        .attr('fill', 'none')\n        .attr('stroke-width', 2)\n        .attr(\n          'd',\n          path(topojson.mesh(geoData, geoData.objects[mapMeta.graphObjectName]))\n        );\n    },\n    [\n      mapData,\n      mapMeta,\n      statistic.total,\n      statistic.maxConfirmed,\n      changeMap,\n      setHoveredRegion,\n    ]\n  );\n\n  const toTitleCase = (str) => {\n    str = str.toLowerCase().split(' ');\n    for (let i = 0; i < str.length; i++) {\n      str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);\n    }\n    return str.join(' ');\n  };\n\n  const renderData = useCallback(() => {\n    const svg = d3.select(choroplethMap.current);\n\n    // Colorbar\n    const maxInterpolation = 0.8;\n    const color = d3\n      .scaleSequential(d3.interpolateReds)\n      .domain([0, statistic.maxConfirmed / maxInterpolation || 10]);\n\n    let cells = null;\n    let label = null;\n\n    label = ({i, genLength, generatedLabels, labelDelimiter}) => {\n      if (i === genLength - 1) {\n        const n = Math.floor(generatedLabels[i]);\n        return `${n}+`;\n      } else {\n        const n1 = 1 + Math.floor(generatedLabels[i]);\n        const n2 = Math.floor(generatedLabels[i + 1]);\n        return `${n1} - ${n2}`;\n      }\n    };\n\n    const numCells = 6;\n    const delta = Math.floor(\n      (statistic.maxConfirmed < numCells ? numCells : statistic.maxConfirmed) /\n        (numCells - 1)\n    );\n\n    cells = Array.from(Array(numCells).keys()).map((i) => i * delta);\n\n    svg\n      .append('g')\n      .attr('class', 'legendLinear')\n      .attr('transform', 'translate(1, 335)');\n\n    const legendLinear = legendColor()\n      .shapeWidth(36)\n      .shapeHeight(10)\n      .cells(cells)\n      .titleWidth(3)\n      .labels(label)\n      .title('Confirmed Cases')\n      .orient('vertical')\n      .scale(color);\n\n    svg\n      .select('.legendLinear')\n      .call(legendLinear)\n      .selectAll('text')\n      .style('font-size', '10px');\n  }, [statistic.maxConfirmed]);\n\n  useEffect(() => {\n    (async () => {\n      const data = await d3.json(mapMeta.geoDataFile);\n      if (statistic && choroplethMap.current) {\n        ready(data);\n        renderData();\n        setSvgRenderCount((prevCount) => prevCount + 1);\n      }\n    })();\n  }, [mapMeta.geoDataFile, statistic, renderData, ready]);\n\n  const highlightRegionInMap = (name, mapType) => {\n    const propertyField = propertyFieldMap[mapType];\n    const paths = d3.selectAll('.path-region');\n    paths.classed('map-hover', (d, i, nodes) => {\n      if (name === d.properties[propertyField]) {\n        nodes[i].parentNode.appendChild(nodes[i]);\n        return true;\n      }\n      return false;\n    });\n  };\n\n  useEffect(() => {\n    highlightRegionInMap(selectedRegion, mapMeta.mapType);\n  }, [mapMeta.mapType, svgRenderCount, selectedRegion]);\n\n  return (\n    <div className=\"svg-parent\">\n      <svg\n        id=\"chart\"\n        width=\"480\"\n        height=\"450\"\n        viewBox=\"0 0 480 450\"\n        preserveAspectRatio=\"xMidYMid meet\"\n        ref={choroplethMap}\n      ></svg>\n    </div>\n  );\n}\n\nexport default ChoroplethMap;\n","import React, {useState, useEffect, useMemo, useCallback} from 'react';\nimport ChoroplethMap from './choropleth';\nimport {MAP_TYPES, MAPS_DIR} from '../constants';\nimport {formatDate} from '../utils/common-functions';\nimport {formatDistance} from 'date-fns';\n\nconst mapMeta = {\n  India: {\n    name: 'India',\n    geoDataFile: `${MAPS_DIR}/india.json`,\n    mapType: MAP_TYPES.COUNTRY,\n    graphObjectName: 'india',\n  },\n  'Andaman and Nicobar Islands': {\n    name: 'Andaman and Nicobar Islands',\n    geoDataFile: `${MAPS_DIR}/andamannicobarislands.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'andamannicobarislands_district',\n  },\n  'Arunachal Pradesh': {\n    name: 'Arunachal Pradesh',\n    geoDataFile: `${MAPS_DIR}/arunachalpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'arunachalpradesh_district',\n  },\n  'Andhra Pradesh': {\n    name: 'Andhra Pradesh',\n    geoDataFile: `${MAPS_DIR}/andhrapradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'andhrapradesh_district',\n  },\n\n  Assam: {\n    name: 'Assam',\n    geoDataFile: `${MAPS_DIR}/assam.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'assam_district',\n  },\n  Bihar: {\n    name: 'Bihar',\n    geoDataFile: `${MAPS_DIR}/bihar.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'bihar_district',\n  },\n  Chhattisgarh: {\n    name: 'Chhattisgarh',\n    geoDataFile: `${MAPS_DIR}/chhattisgarh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'chhattisgarh_district',\n  },\n  Delhi: {\n    name: 'Delhi',\n    geoDataFile: `${MAPS_DIR}/delhi.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'delhi_district',\n  },\n  Karnataka: {\n    name: 'Karnataka',\n    geoDataFile: `${MAPS_DIR}/karnataka.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'karnataka_district',\n  },\n  Kerala: {\n    name: 'Kerala',\n    geoDataFile: `${MAPS_DIR}/kerala.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'kerala_district',\n  },\n  Goa: {\n    name: 'Goa',\n    geoDataFile: `${MAPS_DIR}/goa.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'goa_district',\n  },\n  Gujarat: {\n    name: 'Gujarat',\n    geoDataFile: `${MAPS_DIR}/gujarat.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'gujarat_district',\n  },\n  Haryana: {\n    name: 'Haryana',\n    geoDataFile: `${MAPS_DIR}/haryana.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'haryana_district',\n  },\n  'Himachal Pradesh': {\n    name: 'Himachal Pradesh',\n    geoDataFile: `${MAPS_DIR}/himachalpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'himachalpradesh_district',\n  },\n  'Jammu and Kashmir': {\n    name: 'Jammu and Kashmir',\n    geoDataFile: `${MAPS_DIR}/jammukashmir.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'jammukashmir_district',\n  },\n  Jharkhand: {\n    name: 'Jharkhand',\n    geoDataFile: `${MAPS_DIR}/jharkhand.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'jharkhand_district',\n  },\n  Ladakh: {\n    name: 'Ladakh',\n    geoDataFile: `${MAPS_DIR}/ladakh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'ladakh_district',\n  },\n  'Madhya Pradesh': {\n    name: 'Madhya Pradesh',\n    geoDataFile: `${MAPS_DIR}/madhyapradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'madhyapradesh_district',\n  },\n  Maharashtra: {\n    name: 'Maharashtra',\n    geoDataFile: `${MAPS_DIR}/maharashtra.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'maharashtra_district',\n  },\n  Manipur: {\n    name: 'Manipur',\n    geoDataFile: `${MAPS_DIR}/manipur.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'manipur_district',\n  },\n  Meghalaya: {\n    name: 'Meghalaya',\n    geoDataFile: `${MAPS_DIR}/meghalaya.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'meghalaya_district',\n  },\n  Mizoram: {\n    name: 'Mizoram',\n    geoDataFile: `${MAPS_DIR}/mizoram.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'mizoram_district',\n  },\n  Nagaland: {\n    name: 'Nagaland',\n    geoDataFile: `${MAPS_DIR}/nagaland.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'nagaland_district',\n  },\n  Odisha: {\n    name: 'Odisha',\n    geoDataFile: `${MAPS_DIR}/odisha.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'odisha_district',\n  },\n  Punjab: {\n    name: 'Punjab',\n    geoDataFile: `${MAPS_DIR}/punjab.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'punjab_district',\n  },\n  Rajasthan: {\n    name: 'Rajasthan',\n    geoDataFile: `${MAPS_DIR}/rajasthan.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'rajasthan_district',\n  },\n  Sikkim: {\n    name: 'Sikkim',\n    geoDataFile: `${MAPS_DIR}/sikkim.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'sikkim_district',\n  },\n  'Tamil Nadu': {\n    name: 'Tamil Nadu',\n    geoDataFile: `${MAPS_DIR}/tamil-nadu.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'tamilnadu_district',\n  },\n  Telangana: {\n    name: 'Telangana',\n    geoDataFile: `${MAPS_DIR}/telangana.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'telangana_district',\n  },\n  Tripura: {\n    name: 'Tripura',\n    geoDataFile: `${MAPS_DIR}/tripura.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'tripura_district',\n  },\n  Uttarakhand: {\n    name: 'Uttarakhand',\n    geoDataFile: `${MAPS_DIR}/uttarakhand.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'uttarakhand_district',\n  },\n  'Uttar Pradesh': {\n    name: 'Uttar Pradesh',\n    geoDataFile: `${MAPS_DIR}/uttarpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'uttarpradesh_district',\n  },\n\n  'West Bengal': {\n    name: 'West Bengal',\n    geoDataFile: `${MAPS_DIR}/westbengal.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'westbengal_district',\n  },\n};\n\nexport default function ({states, stateDistrictWiseData, regionHighlighted}) {\n  const [selectedRegion, setSelectedRegion] = useState({});\n  const [currentHoveredRegion, setCurrentHoveredRegion] = useState({});\n  const [currentMap, setCurrentMap] = useState(mapMeta.India);\n\n  useEffect(() => {\n    const region = getRegionFromState(states[1]);\n    setCurrentHoveredRegion(region);\n  }, [states]);\n\n  if (!currentHoveredRegion) {\n    return null;\n  }\n\n  const [statistic, currentMapData] = useMemo(() => {\n    const statistic = {total: 0, maxConfirmed: 0};\n    let currentMapData = {};\n\n    if (currentMap.mapType === MAP_TYPES.COUNTRY) {\n      currentMapData = states.reduce((acc, state) => {\n        if (state.state === 'Total') {\n          return acc;\n        }\n        const confirmed = parseInt(state.confirmed);\n        statistic.total += confirmed;\n        if (confirmed > statistic.maxConfirmed) {\n          statistic.maxConfirmed = confirmed;\n        }\n\n        acc[state.state] = state.confirmed;\n        return acc;\n      }, {});\n    } else if (currentMap.mapType === MAP_TYPES.STATE) {\n      const districtWiseData = (\n        stateDistrictWiseData[currentMap.name] || {districtData: {}}\n      ).districtData;\n      currentMapData = Object.keys(districtWiseData).reduce((acc, district) => {\n        const confirmed = parseInt(districtWiseData[district].confirmed);\n        statistic.total += confirmed;\n        if (confirmed > statistic.maxConfirmed) {\n          statistic.maxConfirmed = confirmed;\n        }\n        acc[district] = districtWiseData[district].confirmed;\n        return acc;\n      }, {});\n    }\n    return [statistic, currentMapData];\n  }, [currentMap, states, stateDistrictWiseData]);\n\n  const setHoveredRegion = useCallback(\n    (name, currentMap) => {\n      if (currentMap.mapType === MAP_TYPES.COUNTRY) {\n        setCurrentHoveredRegion(\n          getRegionFromState(states.filter((state) => name === state.state)[0])\n        );\n      } else if (currentMap.mapType === MAP_TYPES.STATE) {\n        const state = stateDistrictWiseData[currentMap.name] || {\n          districtData: {},\n        };\n        let districtData = state.districtData[name];\n        if (!districtData) {\n          districtData = {\n            confirmed: 0,\n            active: 0,\n            deaths: 0,\n            recovered: 0,\n          };\n        }\n        setCurrentHoveredRegion(getRegionFromDistrict(districtData, name));\n      }\n    },\n    [stateDistrictWiseData, states]\n  );\n\n  useEffect(() => {\n    if (regionHighlighted === undefined) {\n      return;\n    } else if (regionHighlighted === null) {\n      setSelectedRegion(null);\n      return;\n    }\n    const isState = !('district' in regionHighlighted);\n    if (isState) {\n      const newMap = mapMeta['India'];\n      setCurrentMap(newMap);\n      const region = getRegionFromState(regionHighlighted.state);\n      setCurrentHoveredRegion(region);\n      setSelectedRegion(region.name);\n    } else {\n      const newMap = mapMeta[regionHighlighted.state.state];\n      if (!newMap) {\n        return;\n      }\n      setCurrentMap(newMap);\n      setHoveredRegion(regionHighlighted.district, newMap);\n      setSelectedRegion(regionHighlighted.district);\n    }\n  }, [regionHighlighted, currentMap.mapType, setHoveredRegion]);\n\n  const getRegionFromDistrict = (districtData, name) => {\n    if (!districtData) {\n      return;\n    }\n    const region = {...districtData};\n    if (!region.name) {\n      region.name = name;\n    }\n    return region;\n  };\n\n  const getRegionFromState = (state) => {\n    if (!state) {\n      return;\n    }\n    const region = {...state};\n    if (!region.name) {\n      region.name = region.state;\n    }\n    return region;\n  };\n\n  const switchMapToState = useCallback(\n    (name) => {\n      const newMap = mapMeta[name];\n      if (!newMap) {\n        return;\n      }\n      setCurrentMap(newMap);\n      if (newMap.mapType === MAP_TYPES.COUNTRY) {\n        setHoveredRegion(states[1].state, newMap);\n      } else if (newMap.mapType === MAP_TYPES.STATE) {\n        const districtData = (stateDistrictWiseData[name] || {districtData: {}})\n          .districtData;\n        const topDistrict = Object.keys(districtData)\n          .filter((name) => name !== 'Unknown')\n          .sort((a, b) => {\n            return districtData[b].confirmed - districtData[a].confirmed;\n          })[0];\n        setHoveredRegion(topDistrict, newMap);\n      }\n    },\n    [setHoveredRegion, stateDistrictWiseData, states]\n  );\n  const {name, lastupdatedtime} = currentHoveredRegion;\n\n  return (\n    <div\n      className=\"neumap MapExplorer fadeInUp\"\n      style={{animationDelay: '0.2s'}}\n    >\n      <div className=\"header\">\n        <h1>{currentMap.name} Map</h1>\n        <h6>\n          {window.innerWidth <= 769 ? 'Tap' : 'Hover'} over a{' '}\n          {currentMap.mapType === MAP_TYPES.COUNTRY ? 'state' : 'district'} for\n          more details\n        </h6>\n        {window.innerWidth <= 769 && (\n          <h6 style={{marginTop: '1rem'}}>\n            <span\n              style={{\n                fontWeight: 900,\n                color: '#fff',\n                background: '#000',\n                padding: '0.25rem',\n                borderRadius: '2.5px',\n                marginRight: '0.25rem',\n              }}\n            >\n              Update!\n            </span>{' '}\n            Tap twice on states to view districts!\n          </h6>\n        )}\n      </div>\n\n      <div className=\"map-stats\">\n        <div className=\"stats\">\n          <h5>Confirmed</h5>\n          <div className=\"stats-bottom\">\n            <h1>{currentHoveredRegion.confirmed}</h1>\n            <h6>{}</h6>\n          </div>\n        </div>\n\n        <div className=\"stats is-blue\">\n          <h5>Active</h5>\n          <div className=\"stats-bottom\">\n            <h1>{currentHoveredRegion.active || ''}</h1>\n            <h6>{}</h6>\n          </div>\n        </div>\n\n        <div className=\"stats is-green\">\n          <h5>Recovered</h5>\n          <div className=\"stats-bottom\">\n            <h1>{currentHoveredRegion.recovered || ''}</h1>\n            <h6>{}</h6>\n          </div>\n        </div>\n\n        <div className=\"stats is-gray\">\n          <h5>Deceased</h5>\n          <div className=\"stats-bottom\">\n            <h1>{currentHoveredRegion.deaths || ''}</h1>\n            <h6>{}</h6>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"meta\">\n        <h2>{name}</h2>\n        {lastupdatedtime && (\n          <div\n            className={`last-update ${\n              currentMap.mapType === MAP_TYPES.STATE\n                ? 'district-last-update'\n                : 'state-last-update'\n            }`}\n          >\n            <h6>Last Updated</h6>\n            <h3>\n              {isNaN(Date.parse(formatDate(lastupdatedtime)))\n                ? ''\n                : formatDistance(\n                    new Date(formatDate(lastupdatedtime)),\n                    new Date()\n                  ) + ' Ago'}\n            </h3>\n          </div>\n        )}\n\n        {currentMap.mapType === MAP_TYPES.STATE &&\n        currentMapData.Unknown > 0 ? (\n          <h4 className=\"unknown\">\n            Districts unknown for {currentMapData.Unknown} people\n          </h4>\n        ) : null}\n\n        {currentMap.mapType === MAP_TYPES.STATE ? (\n          <div\n            className=\"button back-button\"\n            onClick={() => switchMapToState('India')}\n          >\n            Back\n          </div>\n        ) : null}\n      </div>\n      <ChoroplethMap\n        statistic={statistic}\n        mapMeta={currentMap}\n        mapData={currentMapData}\n        setHoveredRegion={setHoveredRegion}\n        changeMap={switchMapToState}\n        selectedRegion={selectedRegion}\n      />\n    </div>\n  );\n}\n","import React, {useState, useEffect, useRef, useCallback} from 'react';\nimport * as d3 from 'd3';\n\nfunction Minigraph(props) {\n  const [timeseries, setTimeseries] = useState([]);\n  const graphElement1 = useRef(null);\n  const graphElement2 = useRef(null);\n  const graphElement3 = useRef(null);\n  const graphElement4 = useRef(null);\n\n  useEffect(() => {\n    if (props.timeseries.length > 1) {\n      setTimeseries(props.timeseries.slice(props.timeseries.length - 20));\n    }\n  }, [props.timeseries]);\n\n  const graphData = useCallback(\n    (timeseries) => {\n      if (timeseries.length <= 1) return 0;\n      const data = timeseries;\n      const svg1 = d3.select(graphElement1.current);\n      const margin = {top: 30, right: 10, bottom: 30, left: 0};\n      const width = 100 - margin.left - margin.right;\n      const height = 100 - margin.top - margin.bottom;\n\n      const svg2 = d3.select(graphElement2.current);\n      const svg3 = d3.select(graphElement3.current);\n      const svg4 = d3.select(graphElement4.current);\n\n      const x = d3\n        .scaleTime()\n        .domain(\n          d3.extent(data, function (d) {\n            return new Date(d['date'] + '2020');\n          })\n        )\n        .range([0, width]);\n\n      const y1 = d3\n        .scaleLinear()\n        .domain([\n          0,\n          d3.max(data, function (d) {\n            return +d['dailyconfirmed'];\n          }),\n        ])\n        .range([height, 0]);\n\n      const path1 = svg1\n        .append('path')\n        .datum(data)\n        .attr('fill', 'none')\n        .attr('stroke', '#ff073a99')\n        .attr('stroke-width', 3)\n        .attr('cursor', 'pointer')\n        .attr(\n          'd',\n          d3\n            .line()\n            .x(function (d) {\n              return x(new Date(d['date'] + '2020'));\n            })\n            .y(function (d, i) {\n              return y1(d['dailyconfirmed']);\n            })\n            .curve(d3.curveCardinal)\n        );\n\n      const totalLength1 = path1.node().getTotalLength();\n      path1\n        .attr('stroke-dasharray', totalLength1 + ' ' + totalLength1)\n        .attr('stroke-dashoffset', totalLength1)\n        .transition()\n        .duration(props.animate ? 2000 : 0)\n        .attr('stroke-dashoffset', 0);\n\n      svg1\n        .selectAll('.dot')\n        .data(data.slice(data.length - 1))\n        .enter()\n        .append('circle')\n        .attr('fill', '#ff073a')\n        .attr('stroke', '#ff073a')\n        .attr('r', 2)\n        .attr('cursor', 'pointer')\n        .attr('cx', function (d) {\n          return x(new Date(d['date'] + '2020'));\n        })\n        .attr('cy', function (d) {\n          return y1(d['dailyconfirmed']);\n        })\n        .on('mouseover', (d) => {\n          d3.select(d3.event.target).attr('r', '5');\n        })\n        .on('mouseout', (d) => {\n          d3.select(d3.event.target).attr('r', '2');\n        })\n        .style('opacity', 0)\n        .transition()\n        .duration(props.animate ? 3000 : 0)\n        .style('opacity', 1);\n\n      const path2 = svg2\n        .append('path')\n        .datum(data)\n        .attr('fill', 'none')\n        .attr('cursor', 'pointer')\n        .attr('stroke', '#007bff99')\n        .attr('stroke-width', 3)\n        .attr('cursor', 'pointer')\n        .attr('cursor', 'pointer')\n        .attr(\n          'd',\n          d3\n            .line()\n            .x(function (d) {\n              return x(new Date(d['date'] + '2020'));\n            })\n            .y(function (d, i) {\n              if (i === 0) {\n                return y1(\n                  d['dailyconfirmed'] - d['dailyrecovered'] - d['dailydeceased']\n                );\n              } else {\n                return y1(\n                  d['dailyconfirmed'] - d['dailyrecovered'] - d['dailydeceased']\n                );\n              }\n            })\n            .curve(d3.curveCardinal)\n        );\n\n      const totalLength2 = path2.node().getTotalLength();\n      path2\n        .attr('stroke-dasharray', totalLength2 + ' ' + totalLength2)\n        .attr('stroke-dashoffset', totalLength2)\n        .transition()\n        .duration(props.animate ? 2000 : 0)\n        .attr('stroke-dashoffset', 0);\n\n      svg2\n        .selectAll('.dot')\n        .data(data.slice(data.length - 1))\n        .enter()\n        .append('circle')\n        .attr('fill', '#007bff')\n        .attr('stroke', '#007bff')\n        .attr('r', 2)\n        .attr('cursor', 'pointer')\n        .attr('cx', function (d) {\n          return x(new Date(d['date'] + '2020'));\n        })\n        .attr('cy', function (d) {\n          /* const today =\n          data[data.length - 1]['dailyconfirmed'] -\n          data[data.length - 1]['dailyrecovered'] -\n          data[data.length - 1]['dailydeceased'];\n        const yesterday =\n          data[data.length - 2]['dailyconfirmed'] -\n          data[data.length - 2]['dailyrecovered'] -\n          data[data.length - 2]['dailydeceased'];*/\n          return y1(\n            d['dailyconfirmed'] - d['dailyrecovered'] - d['dailydeceased']\n          );\n        })\n        .on('mouseover', (d) => {\n          d3.select(d3.event.target).attr('r', '5');\n        })\n        .on('mouseout', (d) => {\n          d3.select(d3.event.target).attr('r', '2');\n        })\n        .style('opacity', 0)\n        .transition()\n        .duration(props.animate ? 3000 : 0)\n        .style('opacity', 1);\n\n      const path3 = svg3\n        .append('path')\n        .datum(data)\n        .attr('fill', 'none')\n        .attr('stroke', '#28a74599')\n        .attr('stroke-width', 3)\n        .attr('cursor', 'pointer')\n        .attr(\n          'd',\n          d3\n            .line()\n            .x(function (d) {\n              return x(new Date(d['date'] + '2020'));\n            })\n            .y(function (d, i) {\n              if (i === 0) {\n                return y1(d['dailyrecovered']);\n              } else {\n                return y1(d['dailyrecovered']);\n              }\n            })\n            .curve(d3.curveCardinal)\n        );\n\n      const totalLength3 = path1.node().getTotalLength();\n      path3\n        .attr('stroke-dasharray', totalLength3 + ' ' + totalLength3)\n        .attr('stroke-dashoffset', totalLength3)\n        .transition()\n        .duration(props.animate ? 2000 : 0)\n        .attr('stroke-dashoffset', 0);\n\n      svg3\n        .selectAll('.dot')\n        .data(data.slice(data.length - 1))\n        .enter()\n        .append('circle')\n        .attr('fill', '#28a745')\n        .attr('stroke', '#28a745')\n        .attr('r', 2)\n        .attr('cursor', 'pointer')\n        .attr('cx', function (d) {\n          return x(new Date(d['date'] + '2020'));\n        })\n        .attr('cy', function (d) {\n          return y1(d['dailyrecovered']);\n        })\n        .on('mouseover', (d) => {\n          d3.select(d3.event.target).attr('r', '5');\n        })\n        .on('mouseout', (d) => {\n          d3.select(d3.event.target).attr('r', '2');\n        })\n        .style('opacity', 0)\n        .transition()\n        .duration(props.animate ? 3000 : 0)\n        .style('opacity', 1);\n\n      const path4 = svg4\n        .append('path')\n        .datum(data)\n        .attr('fill', 'none')\n        .attr('cursor', 'pointer')\n        .attr('stroke', '#6c757d99')\n        .attr('stroke-width', 3)\n        .attr('cursor', 'pointer')\n        .attr('cursor', 'pointer')\n        .attr(\n          'd',\n          d3\n            .line()\n            .x(function (d) {\n              return x(new Date(d['date'] + '2020'));\n            })\n            .y(function (d, i) {\n              if (i === 0) {\n                return y1(d['dailydeceased']);\n              } else {\n                return y1(d['dailydeceased']);\n              }\n            })\n            .curve(d3.curveCardinal)\n        );\n\n      const totalLength4 = path4.node().getTotalLength();\n      path4\n        .attr('stroke-dasharray', totalLength4 + ' ' + totalLength4)\n        .attr('stroke-dashoffset', totalLength4)\n        .transition()\n        .duration(props.animate ? 2000 : 0)\n        .attr('stroke-dashoffset', 0);\n\n      svg4\n        .selectAll('.dot')\n        .data(data.slice(data.length - 1))\n        .enter()\n        .append('circle')\n        .attr('fill', '#6c757d')\n        .attr('stroke', '#6c757d')\n        .attr('r', 2)\n        .attr('cursor', 'pointer')\n        .attr('cx', function (d) {\n          return x(new Date(d['date'] + '2020'));\n        })\n        .attr('cy', function (d) {\n          return y1(d['dailydeceased']);\n        })\n        .on('mouseover', (d) => {\n          d3.select(d3.event.target).attr('r', '5');\n        })\n        .on('mouseout', (d) => {\n          d3.select(d3.event.target).attr('r', '2');\n        })\n        .style('opacity', 0)\n        .transition()\n        .duration(props.animate ? 3000 : 0)\n        .style('opacity', 1);\n    },\n    [props.animate]\n  );\n\n  useEffect(() => {\n    graphData(timeseries);\n  }, [timeseries, graphData]);\n\n  return (\n    <div className=\"Minigraph\">\n      <div className=\"svg-parent fadeInUp\" style={{animationDelay: '0.6s'}}>\n        <svg\n          ref={graphElement1}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-blue fadeInUp\"\n        style={{animationDelay: '0.7s'}}\n      >\n        <svg\n          ref={graphElement2}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-green fadeInUp\"\n        style={{animationDelay: '0.8s'}}\n      >\n        <svg\n          ref={graphElement3}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-gray fadeInUp\"\n        style={{animationDelay: '0.9s'}}\n      >\n        <svg\n          ref={graphElement4}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Minigraph;\n","import React from 'react';\n\nimport axios from 'axios';\n\nexport default class GlobalData extends React.Component {\n  state = {\n    global: [],\n  };\n\n  componentDidMount() {\n    axios.get(`https://corona.lmao.ninja/all`).then((res) => {\n      const global = res.data;\n      this.setState({global});\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"neuglobal\">\n          <div className=\"header fadeInUp\" style={{animationDelay: '0.5s'}}>\n            <div className=\"header-mid\">\n              <div className=\"titles\">\n                <h1>Global COVID-19 Tracker</h1>\n                <h6 style={{fontWeight: 600}}>\n                  Total Affected Countries:{' '}\n                  <span style={{color: 'red'}}>\n                    {this.state.global.affectedCountries}\n                  </span>\n                </h6>\n              </div>\n            </div>\n          </div>\n          <div className=\"global-stats\">\n            <div className=\"stats\">\n              <h6>Confirmed</h6>\n              <div className=\"stats-bottom\">\n                <h3>{this.state.global.cases}</h3>\n              </div>\n            </div>\n\n            <div className=\"stats is-blue\">\n              <h6>Active</h6>\n              <div className=\"stats-bottom\">\n                <h3>{this.state.global.active}</h3>\n              </div>\n            </div>\n\n            <div className=\"stats is-green\">\n              <h6>Recovered</h6>\n              <div className=\"stats-bottom\">\n                <h3>{this.state.global.recovered}</h3>\n              </div>\n            </div>\n\n            <div className=\"stats is-gray\">\n              <h6>Deceased</h6>\n              <div className=\"stats-bottom\">\n                <h3>{this.state.global.deaths}</h3>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {formatDistance} from 'date-fns';\nimport {formatDate, formatDateAbsolute} from '../utils/common-functions';\nimport Table from './table';\nimport Level from './level';\nimport MapExplorer from './mapexplorer';\nimport Minigraph from './minigraph';\nimport GlobalData from './global';\nfunction Home(props) {\n  const [states, setStates] = useState([]);\n  const [stateDistrictWiseData, setStateDistrictWiseData] = useState({});\n  const [fetched, setFetched] = useState(false);\n  const [lastUpdated, setLastUpdated] = useState('');\n  const [timeseries, setTimeseries] = useState([]);\n  const [deltas, setDeltas] = useState([]);\n  const [regionHighlighted, setRegionHighlighted] = useState(undefined);\n\n  useEffect(() => {\n    if (fetched === false) {\n      getStates();\n    }\n  }, [fetched]);\n\n  const getStates = async () => {\n    try {\n      const [response, stateDistrictWiseResponse] = await Promise.all([\n        axios.get('https://api.covid19india.org/data.json'),\n        axios.get('https://api.covid19india.org/state_district_wise.json'),\n      ]);\n      setStates(response.data.statewise);\n      setTimeseries(response.data.cases_time_series);\n      setLastUpdated(response.data.statewise[0].lastupdatedtime);\n      setDeltas(response.data.key_values[0]);\n      setStateDistrictWiseData(stateDistrictWiseResponse.data);\n      setFetched(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onHighlightState = (state, index) => {\n    if (!state && !index) setRegionHighlighted(null);\n    else setRegionHighlighted({state, index});\n  };\n  const onHighlightDistrict = (district, state, index) => {\n    if (!state && !index && !district) setRegionHighlighted(null);\n    else setRegionHighlighted({district, state, index});\n  };\n\n  return (\n    <div className=\"Home\">\n      <div className=\"home-left\">\n        <GlobalData />\n        <div className=\"neutable\">\n          <div className=\"header fadeInUp\" style={{animationDelay: '0.5s'}}>\n            <div className=\"header-mid\">\n              <div className=\"titles\">\n                <h1>India COVID-19 Tracker</h1>\n                <h6 style={{fontWeight: 600}}>A Crowdsourced Initiative</h6>\n              </div>\n              <div className=\"last-update\">\n                <h6>Last Updated</h6>\n                <h6 style={{color: '#28a745', fontWeight: 600}}>\n                  {isNaN(Date.parse(formatDate(lastUpdated)))\n                    ? ''\n                    : formatDistance(\n                        new Date(formatDate(lastUpdated)),\n                        new Date()\n                      ) + ' Ago'}\n                </h6>\n                <h6 style={{color: '#28a745', fontWeight: 600}}>\n                  {isNaN(Date.parse(formatDate(lastUpdated)))\n                    ? ''\n                    : formatDateAbsolute(lastUpdated)}\n                </h6>\n              </div>\n            </div>\n          </div>\n\n          <Level data={states} deltas={deltas} />\n          <Minigraph timeseries={timeseries} animate={true} />\n\n          <Table\n            states={states}\n            summary={false}\n            stateDistrictWiseData={stateDistrictWiseData}\n            onHighlightState={onHighlightState}\n            onHighlightDistrict={onHighlightDistrict}\n          />\n        </div>\n      </div>\n\n      <div className=\"home-right\">\n        {fetched && (\n          <React.Fragment>\n            <MapExplorer\n              states={states}\n              stateDistrictWiseData={stateDistrictWiseData}\n              regionHighlighted={regionHighlighted}\n            />\n          </React.Fragment>\n        )}\n        <div className=\"neuchecker fadeInUp\" style={{animationDelay: '0.5s'}}>\n          <h1 style={{marginLeft: '20px'}}>COVID-19 Symptom Checker</h1>\n          <iframe\n            id=\"hf-iframe\"\n            src=\"https://covid19.infermedica.com/en?header=false&guidelines_data=%7B%0A%20%20%22emergency_numbers%22%3A%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%22number%22%3A%20%22102%22%2C%0A%20%20%20%20%20%20%22description%22%3A%20%22Ambulance%22%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%22number%22%3A%20%22112%22%2C%0A%20%20%20%20%20%20%22description%22%3A%20%22National%20Emergency%20Number%22%0A%20%20%20%20%7D%0A%20%20%5D%2C%0A%20%20%22covid_numbers%22%3A%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%22number%22%3A%20%22%2B91-11-23978046%22%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%22number%22%3A%20%22%2B1075%22%2C%0A%20%20%20%20%20%20%22description%22%3A%20%22Toll%20Free%22%0A%20%20%20%20%7D%0A%20%20%5D%2C%0A%20%20%22websites%22%3A%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%22website%22%3A%20%22https%3A%2F%2Fwww.mohfw.gov.in%2F%22%2C%0A%20%20%20%20%20%20%22description%22%3A%20%22Ministry%20of%20Health%20and%20Family%20Welfare%22%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%22website%22%3A%20%22https%3A%2F%2Fwww.mohfw.gov.in%2Fpdf%2Fcoronvavirushelplinenumber.pdf%22%2C%0A%20%20%20%20%20%20%22description%22%3A%20%22State%20Wise%20Helpline%20Number%22%0A%20%20%20%20%7D%0A%20%20%5D%2C%0A%20%20%22free_text%22%3A%20%22Not%20sure%20what%20to%20do%3F%20Call%3A%20-%20%2B91-11-23978046%22%0A%7D\"\n            style={{border: 0, height: '100vh', width: '100%'}}\n            title=\"COVID-19 Symptom Checker\"\n          ></iframe>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nfunction Navbar(props) {\n  // HTML Properties for each of the links in UI\n  const navLinkProps = (path, animationDelay) => ({\n    className: `fadeInUp ${window.location.pathname === path ? 'focused' : ''}`,\n    style: {\n      animationDelay: `${animationDelay}s`,\n    },\n  });\n\n  if (window.location.pathname !== '/summary') {\n    return (\n      <div\n        className=\"Navbar\"\n        style={{\n          animationDelay: '0.5s',\n          transition: 'all 0.3s ease-in-out',\n        }}\n      >\n        <img\n          className=\"fadeInUp\"\n          alt=\"India COVID-19 Live Status\"\n          src=\"/icon.png\"\n          style={{\n            animationDelay: '0.0s',\n            width: '150px',\n            height: '60px',\n            transition: 'all 0.3s ease-in-out',\n          }}\n        />\n\n        <div className=\"navbar-left\"></div>\n\n        <div className=\"navbar-right\">\n          {props.pages.map((page, i) => {\n            return (\n              <Link to={page.pageLink} key={i}>\n                <span\n                  {...navLinkProps(page.pageLink, page.animationDelayForNavbar)}\n                >\n                  {page.displayName}\n                </span>\n              </Link>\n            );\n          })}\n        </div>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n}\n\nexport default Navbar;\n","import React from 'react';\n\nfunction Links(props) {\n  return (\n    <React.Fragment>\n      <div className=\"video fadeInUp\" style={{animationDelay: '0.1s'}}>\n        <h1 style={{marginLeft: '2rem'}}>Myths & Truths Realted to COVID-19</h1>\n        <div className=\"embed-container\">\n          <iframe\n            src=\"https://www.youtube.com/embed/izszT-YEUKw\"\n            frameBorder=\"0\"\n            allowFullScreen\n            title=\"COVID-19 Myths & Truths\"\n          ></iframe>\n        </div>\n      </div>\n      <div className=\"Links\">\n        <div className=\"tags\" hidden>\n          <h1>Related tags:</h1>\n          <ul>\n            <li>covid19india</li>\n            <li>covid19</li>\n            <li>covid-19</li>\n            <li>COVID-19</li>\n            <li>COVID19</li>\n            <li>coronavirus</li>\n            <li>corona-virus</li>\n            <li>corona virus</li>\n            <li>nobel corona virus</li>\n            <li>nobel coronavirus</li>\n            <li>what is covid-19</li>\n            <li>what is covid19</li>\n            <li>what is coronavirus</li>\n            <li>what is corona virus</li>\n            <li>coronavirus symptoms</li>\n            <li>corona virus symptoms</li>\n            <li>what is the symptoms of coronavirus</li>\n            <li>what is the symptoms of corona virus</li>\n            <li>what is the symptoms of covid19</li>\n            <li>what is the symptoms of covid-19</li>\n            <li>stay home</li>\n            <li>WHO guidlines on corona</li>\n            <li>Corona symptoms checker</li>\n            <li>online corona symptoms checker</li>\n            <li>coronavirus symptoms checker</li>\n            <li>corona virus symptoms checker</li>\n            <li>latest report of coronavirus</li>\n            <li>corona prevention</li>\n            <li>corona disease</li>\n            <li>treatment of coronavirus</li>\n            <li>coronavirus treatment</li>\n            <li>corona virus treatment</li>\n            <li>treatment of corona virus</li>\n            <li>corona current situation</li>\n            <li>corona infected</li>\n            <li>virus 2019</li>\n            <li>how may peoples are infected by corona</li>\n            <li>what is the meaning of lockdown</li>\n            <li>what is the meaning of Quarantine</li>\n            <li>corona latest news</li>\n            <li>latest news on corona</li>\n            <li>coronavirus latest news</li>\n            <li>corona virus latest report</li>\n            <li>coronavirus latest report</li>\n            <li>China virus</li>\n            <li>myth related to coronavirus</li>\n            <li>myth and truth of coronavirus</li>\n            <li>global report on coronavirus</li>\n            <li>latest report on coronavirus</li>\n            <li>coronavirus news</li>\n            <li>corona virus news</li>\n            <li>latest report on corona virus</li>\n            <li>latest corona news</li>\n            <li>latest coronavirus news</li>\n            <li>myth behind corona virus</li>\n            <li>myth behind coronvirus</li>\n            <li>corona in india</li>\n            <li>infected people in india due to coronavirus</li>\n            <li>infected people in india</li>\n            <li>infected people in india due to covid19</li>\n            <li>infected people in india due to corona virus</li>\n            <li>infected people in india due to COVID19</li>\n          </ul>\n        </div>\n        <div className=\"link fadeInUp\" style={{animationDelay: '0.2s'}}>\n          <h3>HELPLINE NUMBERS [by State]</h3>\n          <a href=\"https://www.mohfw.gov.in/pdf/coronvavirushelplinenumber.pdf\">\n            https://www.mohfw.gov.in/pdf/coronvavirushelplinenumber.pdf\n          </a>\n        </div>\n\n        <div className=\"link fadeInUp\" style={{animationDelay: '0.3s'}}>\n          <h3>Ministry of Health and Family Welfare, Gov. of India</h3>\n          <a href=\"https://www.mohfw.gov.in/\">https://www.mohfw.gov.in/</a>\n        </div>\n\n        <div className=\"link fadeInUp\" style={{animationDelay: '0.4s'}}>\n          <h3>WHO : COVID-19 Home Page</h3>\n          <a href=\"https://www.who.int/emergencies/diseases/novel-coronavirus-2019\">\n            https://www.who.int/emergencies/diseases/novel-coronavirus-2019\n          </a>\n        </div>\n\n        <div className=\"link fadeInUp\" style={{animationDelay: '0.5s'}}>\n          <h3>CDC</h3>\n          <a href=\"https://www.cdc.gov/coronavirus/2019-ncov/faq.html\">\n            https://www.cdc.gov/coronavirus/2019-ncov/faq.html\n          </a>\n        </div>\n\n        <div className=\"link fadeInUp\" style={{animationDelay: '0.6s'}}>\n          <h3>COVID-19 Global Tracker</h3>\n          <a href=\"https://coronavirus.thebaselab.com/\">\n            https://coronavirus.thebaselab.com/\n          </a>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Links;\n","import React from 'react';\n\nfunction SC() {\n  return (\n    <div className=\"SC\">\n      <div className=\"tags\" hidden>\n        <h1>Related tags:</h1>\n        <ul>\n          <li>covid19india</li>\n          <li>covid19</li>\n          <li>covid-19</li>\n          <li>COVID-19</li>\n          <li>COVID19</li>\n          <li>coronavirus</li>\n          <li>corona-virus</li>\n          <li>corona virus</li>\n          <li>nobel corona virus</li>\n          <li>nobel coronavirus</li>\n          <li>what is covid-19</li>\n          <li>what is covid19</li>\n          <li>what is coronavirus</li>\n          <li>what is corona virus</li>\n          <li>coronavirus symptoms</li>\n          <li>corona virus symptoms</li>\n          <li>what is the symptoms of coronavirus</li>\n          <li>what is the symptoms of corona virus</li>\n          <li>what is the symptoms of covid19</li>\n          <li>what is the symptoms of covid-19</li>\n          <li>stay home</li>\n          <li>WHO guidlines on corona</li>\n          <li>Corona symptoms checker</li>\n          <li>online corona symptoms checker</li>\n          <li>coronavirus symptoms checker</li>\n          <li>corona virus symptoms checker</li>\n          <li>latest report of coronavirus</li>\n          <li>corona prevention</li>\n          <li>corona disease</li>\n          <li>treatment of coronavirus</li>\n          <li>coronavirus treatment</li>\n          <li>corona virus treatment</li>\n          <li>treatment of corona virus</li>\n          <li>corona current situation</li>\n          <li>corona infected</li>\n          <li>virus 2019</li>\n          <li>how may peoples are infected by corona</li>\n          <li>what is the meaning of lockdown</li>\n          <li>what is the meaning of Quarantine</li>\n          <li>corona latest news</li>\n          <li>latest news on corona</li>\n          <li>coronavirus latest news</li>\n          <li>corona virus latest report</li>\n          <li>coronavirus latest report</li>\n          <li>China virus</li>\n          <li>myth related to coronavirus</li>\n          <li>myth and truth of coronavirus</li>\n          <li>global report on coronavirus</li>\n          <li>latest report on coronavirus</li>\n          <li>coronavirus news</li>\n          <li>corona virus news</li>\n          <li>latest report on corona virus</li>\n          <li>latest corona news</li>\n          <li>latest coronavirus news</li>\n          <li>myth behind corona virus</li>\n          <li>myth behind coronvirus</li>\n          <li>corona in india</li>\n          <li>infected people in india due to coronavirus</li>\n          <li>infected people in india</li>\n          <li>infected people in india due to covid19</li>\n          <li>infected people in india due to corona virus</li>\n          <li>infected people in india due to COVID19</li>\n        </ul>\n      </div>\n      <iframe\n        id=\"hf-iframe\"\n        src=\"https://covid19.infermedica.com/en?header=false&guidelines_data=%7B%0A%20%20%22emergency_numbers%22%3A%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%22number%22%3A%20%22102%22%2C%0A%20%20%20%20%20%20%22description%22%3A%20%22Ambulance%22%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%22number%22%3A%20%22112%22%2C%0A%20%20%20%20%20%20%22description%22%3A%20%22National%20Emergency%20Number%22%0A%20%20%20%20%7D%0A%20%20%5D%2C%0A%20%20%22covid_numbers%22%3A%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%22number%22%3A%20%22%2B91-11-23978046%22%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%22number%22%3A%20%22%2B1075%22%2C%0A%20%20%20%20%20%20%22description%22%3A%20%22Toll%20Free%22%0A%20%20%20%20%7D%0A%20%20%5D%2C%0A%20%20%22websites%22%3A%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%22website%22%3A%20%22https%3A%2F%2Fwww.mohfw.gov.in%2F%22%2C%0A%20%20%20%20%20%20%22description%22%3A%20%22Ministry%20of%20Health%20and%20Family%20Welfare%22%0A%20%20%20%20%7D%2C%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%22website%22%3A%20%22https%3A%2F%2Fwww.mohfw.gov.in%2Fpdf%2Fcoronvavirushelplinenumber.pdf%22%2C%0A%20%20%20%20%20%20%22description%22%3A%20%22State%20Wise%20Helpline%20Number%22%0A%20%20%20%20%7D%0A%20%20%5D%2C%0A%20%20%22free_text%22%3A%20%22Not%20sure%20what%20to%20do%3F%20Call%3A%20-%20%2B91-11-23978046%22%0A%7D\"\n        style={{border: 0}}\n        title=\"COVID-19 Symptom Checker\"\n      ></iframe>\n    </div>\n  );\n}\n\nexport default SC;\n","import React from 'react';\nimport {Zoom} from 'react-slideshow-image';\n\nconst images = [\n  '/slider/slide_1.webp',\n  '/slider/slide_2.webp',\n  '/slider/slide_3.webp',\n];\n\nconst zoomInProperties = {\n  duration: 5000,\n  transitionDuration: 500,\n  infinite: true,\n  indicators: true,\n  scale: 1.5,\n  arrows: true,\n};\n\nconst Banner = () => {\n  return (\n    <div className=\"slide-container\">\n      <Zoom {...zoomInProperties}>\n        {images.map((each, index) => (\n          <img\n            key={index}\n            style={{width: '100%'}}\n            src={each}\n            alt=\"COVID-19 Symptoms, Precaution, Myths & Truths\"\n          />\n        ))}\n      </Zoom>\n    </div>\n  );\n};\nexport default Banner;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\n\nimport './App.scss';\n\nimport Home from './components/home';\nimport Navbar from './components/navbar';\nimport Links from './components/links';\nimport SC from './components/sc';\nimport Banner from './components/banner';\n\nconst history = require('history').createBrowserHistory;\n\nfunction App() {\n  const pages = [\n    {\n      pageLink: '/',\n      view: Home,\n      displayName: 'Home',\n      animationDelayForNavbar: 0.2,\n    },\n    {\n      pageLink: '/symptomchecker',\n      view: SC,\n      displayName: 'Symptom Checker',\n      animationDelayForNavbar: 0.5,\n    },\n    {\n      pageLink: '/links',\n      view: Links,\n      displayName: 'Helpful Links',\n      animationDelayForNavbar: 0.6,\n    },\n  ];\n\n  return (\n    <div className=\"App\">\n      <Router history={history}>\n        <Route\n          render={({location}) => (\n            <div className=\"Almighty-Router\">\n              <Navbar pages={pages} />\n              <Banner />\n              <Route exact path=\"/\" render={() => <Redirect to=\"/\" />} />\n              <Switch location={location}>\n                {pages.map((page, i) => {\n                  return (\n                    <Route\n                      exact\n                      path={page.pageLink}\n                      component={page.view}\n                      key={i}\n                    />\n                  );\n                })}\n              </Switch>\n            </div>\n          )}\n        />\n      </Router>\n\n      <footer className=\"fadeInUp\" style={{animationDelay: '2s'}}>\n        <h5>We stand with everyone fighting on the frontlines</h5>\n        <div className=\"link\">\n          <a href=\"https://coronalivestatus.info\">Covid-19 India Live Status</a>\n        </div>\n        <div className=\"tags\">\n          <h1>Related tags:</h1>\n          <ul>\n            <li>covid19india</li>\n            <li>covid19</li>\n            <li>covid-19</li>\n            <li>COVID-19</li>\n            <li>COVID19</li>\n            <li>coronavirus</li>\n            <li>corona-virus</li>\n            <li>corona virus</li>\n            <li>nobel corona virus</li>\n            <li>nobel coronavirus</li>\n            <li>what is covid-19</li>\n            <li>what is covid19</li>\n            <li>what is coronavirus</li>\n            <li>what is corona virus</li>\n            <li>coronavirus symptoms</li>\n            <li>corona virus symptoms</li>\n            <li>what is the symptoms of coronavirus</li>\n            <li>what is the symptoms of corona virus</li>\n            <li>what is the symptoms of covid19</li>\n            <li>what is the symptoms of covid-19</li>\n            <li>stay home</li>\n            <li>WHO guidlines on corona</li>\n            <li>Corona symptoms checker</li>\n            <li>online corona symptoms checker</li>\n            <li>coronavirus symptoms checker</li>\n            <li>corona virus symptoms checker</li>\n            <li>latest report of coronavirus</li>\n            <li>corona prevention</li>\n            <li>corona disease</li>\n            <li>treatment of coronavirus</li>\n            <li>coronavirus treatment</li>\n            <li>corona virus treatment</li>\n            <li>treatment of corona virus</li>\n            <li>corona current situation</li>\n            <li>corona infected</li>\n            <li>virus 2019</li>\n            <li>how may peoples are infected by corona</li>\n            <li>what is the meaning of lockdown</li>\n            <li>what is the meaning of Quarantine</li>\n            <li>corona latest news</li>\n            <li>latest news on corona</li>\n            <li>coronavirus latest news</li>\n            <li>corona virus latest report</li>\n            <li>coronavirus latest report</li>\n            <li>China virus</li>\n            <li>myth related to coronavirus</li>\n            <li>myth and truth of coronavirus</li>\n            <li>global report on coronavirus</li>\n            <li>latest report on coronavirus</li>\n            <li>coronavirus news</li>\n            <li>corona virus news</li>\n            <li>latest report on corona virus</li>\n            <li>latest corona news</li>\n            <li>latest coronavirus news</li>\n            <li>myth behind corona virus</li>\n            <li>myth behind coronvirus</li>\n            <li>corona in india</li>\n            <li>infected people in india due to coronavirus</li>\n            <li>infected people in india</li>\n            <li>infected people in india due to covid19</li>\n            <li>infected people in india due to corona virus</li>\n            <li>infected people in india due to COVID19</li>\n          </ul>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'},\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}